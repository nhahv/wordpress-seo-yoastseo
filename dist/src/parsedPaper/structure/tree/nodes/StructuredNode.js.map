{"version":3,"sources":["../../../../../../src/parsedPaper/structure/tree/nodes/StructuredNode.js"],"names":["StructuredNode","Node","constructor","tag","sourceCodeLocation","children","addChild","child","parent","push"],"mappings":";;;;;;AAAA;;;;;;AACA;;;;;;;;;;;AAWA,MAAMA,cAAN,SAA6BC,cAA7B,CAAkC;AACjC;;;;;;;;;;;;AAYAC,aAAaC,GAAb,EAAkBC,kBAAlB,EAAuC;AACtC,QAAO,gBAAP,EAAyBA,kBAAzB;AACA;;;;AAIA,OAAKD,GAAL,GAAWA,GAAX;AACA;;;;AAIA,OAAKE,QAAL,GAAgB,EAAhB;AACA;;AAED;;;;;;;AAOAC,UAAUC,KAAV,EAAkB;AACjBA,QAAMC,MAAN,GAAe,IAAf;AACA,OAAKH,QAAL,CAAcI,IAAd,CAAoBF,KAApB;AACA;AArCgC;kBAuCnBP,c","file":"StructuredNode.js","sourcesContent":["import Node from \"./Node\";\n/**\n * Represents a piece of structure that is present in the original text, but is not relevant for the further analysis\n * of the text.\n *\n * Talking about HTML, this would encompass thing like `<div>`, `<section>`, `<aside>`, `<fieldset>`\n * and other HTML block elements.\n *\n * @extends module:parsedPaper/structure.Node\n *\n * @memberOf module:parsedPaper/structure\n */\nclass StructuredNode extends Node {\n\t/**\n\t * Represents a piece of structure that is present in the original text, but is not relevant for the further\n\t * analysis of the text.\n\t *\n\t * Talking about HTML, this would encompass thing like `<div>`, `<section>`, `<aside>`, `<fieldset>`\n\t * and other HTML block elements.\n\t *\n\t * @param {string} tag                The tag used in the node.\n\t * @param {?Object} sourceCodeLocation The parse5 formatted location of the element inside of the source code.\n\t *\n\t * @returns {void}\n\t */\n\tconstructor( tag, sourceCodeLocation ) {\n\t\tsuper( \"StructuredNode\", sourceCodeLocation );\n\t\t/**\n\t\t * Type of structured node (e.g. \"div\", \"section\" etc.).\n\t\t * @type {string}\n\t\t */\n\t\tthis.tag = tag;\n\t\t/**\n\t\t * This node's child nodes.\n\t\t * @type {module:parsedPaper/structure.Node[]}\n\t\t */\n\t\tthis.children = [];\n\t}\n\n\t/**\n\t * Adds a child and sets its parent to this node.\n\t *\n\t * @param {module:parsedPaper/structure.Node} child The child to add.\n\t *\n\t * @returns {void}\n\t */\n\taddChild( child ) {\n\t\tchild.parent = this;\n\t\tthis.children.push( child );\n\t}\n}\nexport default StructuredNode;\n"]}