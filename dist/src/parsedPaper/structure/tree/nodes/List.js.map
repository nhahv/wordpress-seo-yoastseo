{"version":3,"sources":["../../../../../../src/parsedPaper/structure/tree/nodes/List.js"],"names":["List","StructuredNode","constructor","ordered","sourceCodeLocation","children","addChild","child","ListItem","console","warn","push"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA;;;;;;;AAOA,MAAMA,IAAN,SAAmBC,wBAAnB,CAAkC;AACjC;;;;;;;;AAQAC,aAAaC,OAAb,EAAsBC,kBAAtB,EAA2C;AAC1C,QAAO,MAAP,EAAeA,kBAAf;AACA;;;;AAIA,OAAKD,OAAL,GAAeA,OAAf;AACA;;;;AAIA,OAAKE,QAAL,GAAgB,EAAhB;AACA;;AAED;;;;;;AAMAC,UAAUC,KAAV,EAAkB;AACjB,MAAK,EAAIA,iBAAiBC,kBAArB,CAAL,EAAuC;AACtCC,WAAQC,IAAR,CAAc,gCAAd;AACA;AACD,OAAKL,QAAL,CAAcM,IAAd,CAAoBJ,KAApB;AACA;AAlCgC;kBAoCnBP,I","file":"List.js","sourcesContent":["import StructuredNode from \"./StructuredNode\";\nimport ListItem from \"./ListItem\";\n\n/**\n * Represents a list of items.\n *\n * @extends module:parsedPaper/structure.Node\n *\n * @memberOf module:parsedPaper/structure\n */\nclass List extends StructuredNode {\n\t/**\n\t * Represents a list of items.\n\t *\n\t * @param {boolean} ordered            Whether the list is ordered or not.\n\t * @param {Object}  sourceCodeLocation The parse5 formatted location of the element inside of the source code.\n\t *\n\t * @returns {void}\n\t */\n\tconstructor( ordered, sourceCodeLocation ) {\n\t\tsuper( \"List\", sourceCodeLocation );\n\t\t/**\n\t\t * If this list is ordered.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.ordered = ordered;\n\t\t/**\n\t\t * This node's children (should only be list items).\n\t\t * @type {ListItem[]}\n\t\t */\n\t\tthis.children = [];\n\t}\n\n\t/**\n\t * Appends the child to this List's children.\n\t *\n\t * @param {ListItem} child The child to add.\n\t * @returns {void}\n\t */\n\taddChild( child ) {\n\t\tif ( ! ( child instanceof ListItem ) ) {\n\t\t\tconsole.warn( \"Added child is not a ListItem!\" );\n\t\t}\n\t\tthis.children.push( child );\n\t}\n}\nexport default List;\n"]}