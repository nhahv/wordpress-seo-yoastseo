{"version":3,"sources":["../../../../../src/parsedPaper/build/linguisticParsing/parseText.js"],"names":["parseTextIntoSentences","text","sentenceTokenizer","SentenceTokenizer","createTokenizer","tokenizer","tokens","tokenize","getSentencesFromTokens"],"mappings":";;;;;;;AAAA;;;;;;AAEA;;;;;;;AAOA,MAAMA,yBAAyB,SAAzBA,sBAAyB,CAAUC,IAAV,EAAiB;AAC/C,QAAOC,oBAAoB,IAAIC,2BAAJ,EAA3B;;AAD+C,8BAEjBD,kBAAkBE,eAAlB,EAFiB;;AAAA,QAEvCC,SAFuC,yBAEvCA,SAFuC;AAAA,QAE5BC,MAF4B,yBAE5BA,MAF4B;;;AAI/CJ,oBAAkBK,QAAlB,CAA4BF,SAA5B,EAAuCJ,IAAvC;AACA,SAAOC,kBAAkBM,sBAAlB,CAA0CF,MAA1C,CAAP;AACA,CAND;;QASCN,sB,GAAAA,sB","file":"parseText.js","sourcesContent":["import SentenceTokenizer from \"./SentenceTokenizer\";\n\n/**\n * Parses a text into sentences.\n *\n * @param {string} text The text to parse.\n *\n * @returns {string[]} An array of sentence objects.\n */\nconst parseTextIntoSentences = function( text ) {\n\tconst  sentenceTokenizer = new SentenceTokenizer();\n\tconst { tokenizer, tokens } = sentenceTokenizer.createTokenizer();\n\n\tsentenceTokenizer.tokenize( tokenizer, text );\n\treturn sentenceTokenizer.getSentencesFromTokens( tokens );\n};\n\nexport {\n\tparseTextIntoSentences,\n};\n"]}