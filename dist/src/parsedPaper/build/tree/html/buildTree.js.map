{"version":3,"sources":["../../../../../../src/parsedPaper/build/tree/html/buildTree.js"],"names":["buildTree","html","parse5Tree","sourceCodeLocationInfo","htmlTreeConverter","HTMLTreeConverter","tree","convert"],"mappings":";;;;;;AAAA;;AAEA;;;;AACA;;;;;;AAGA;;;;;;;;;AASA,MAAMA,YAAY,SAAZA,SAAY,CAAUC,IAAV,EAAiB;AAClC;;;;AAIA,OAAMC,aAAa,0BAAeD,IAAf,EAAqB,EAAEE,wBAAwB,IAA1B,EAArB,CAAnB;;AAEA,OAAMC,oBAAoB,IAAIC,2BAAJ,EAA1B;AACA,KAAIC,OAAOF,kBAAkBG,OAAlB,CAA2BL,UAA3B,CAAX;;AAEA;AACAI,QAAO,2BAAaA,IAAb,CAAP;AACA,QAAOA,IAAP;AACA,CAbD;;kBAeeN,S","file":"buildTree.js","sourcesContent":["import { parseFragment } from \"parse5\";\n\nimport HTMLTreeConverter from \"./HTMLTreeConverter\";\nimport cleanUpTree from \"../cleanup/postParsing\";\n\n\n/**\n * Parses the given html-string to a tree, to be used in further analysis.\n *\n * @param {string} html The html-string that should be parsed.\n *\n * @returns {module:parsedPaper/structure.Node} The build tree.\n *\n * @memberOf module:parsedPaper/builder\n */\nconst buildTree = function( html ) {\n\t/*\n\t * Parsing of a HTML article takes on average 19ms\n\t * (based on the fullTexts in the specs (n=24), measured using `console.time`).\n\t */\n\tconst parse5Tree = parseFragment( html, { sourceCodeLocationInfo: true } );\n\n\tconst htmlTreeConverter = new HTMLTreeConverter();\n\tlet tree = htmlTreeConverter.convert( parse5Tree );\n\n\t// Cleanup takes < 2ms.\n\ttree = cleanUpTree( tree );\n\treturn tree;\n};\n\nexport default buildTree;\n"]}